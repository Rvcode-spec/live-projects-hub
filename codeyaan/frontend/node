
'use client'

import { useState, useEffect } from "react"
import Link from "next/link"
import { usePathname } from "next/navigation"
import { 
  Code2, 
  Bell, 
  Search, 
  Settings, 
  User, 
  LogOut,
  Menu,
  X
} from "lucide-react"

export default function AdminNavbar() {
  const [isScrolled, setIsScrolled] = useState(false)
  const [isMenuOpen, setIsMenuOpen] = useState(false)
  const [isProfileOpen, setIsProfileOpen] = useState(false)
  const pathname = usePathname()

  useEffect(() => {
    const handleScroll = () => setIsScrolled(window.scrollY > 10)
    window.addEventListener("scroll", handleScroll)
    return () => window.removeEventListener("scroll", handleScroll)
  }, [])

  const navigationLinks = [
    { name: "Dashboard", href: "/dashboard" },
    { name: "Analytics", href: "/analytics" },
    { name: "Settings", href: "/settings" },
  ]

  return (
    <nav
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        isScrolled
          ? "bg-violet-500/90 backdrop-blur-xl shadow-lg border-b border-purple-300/30"
          : "bg-violet-500 backdrop-blur-sm"
      }`}
    >
      <div className="flex items-center justify-between px-6 py-4">
        {/* Logo - Always visible */}
        <div className="flex items-center space-x-2">
          <Code2 className="text-white w-8 h-8 md:w-10 md:h-10" />
          <div className="text-xl md:text-2xl font-bold text-white">
            Codeyaan
          </div>
        </div>

        {/* Search Bar */}
        <div className="hidden md:flex flex-1 max-w-md mx-8">
          <div className="relative w-full">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/70 w-5 h-5" />
            <input
              type="text"
              placeholder="Search anything..."
              className="w-full pl-10 pr-4 py-3 bg-white/20 border border-white/30 rounded-xl focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-transparent transition-all duration-300 placeholder-white/70 text-white"
            />
          </div>
        </div>

        {/* Desktop Navigation - Dashboard Link */}
        <div className="hidden lg:flex items-center space-x-1">
          <Link
            href="/dashboard"
            className={`px-4 py-2 rounded-lg transition-all duration-300 font-medium ${
              pathname === "/dashboard"
                ? "bg-white/20 text-white"
                : "text-white/80 hover:text-white hover:bg-white/10"
            }`}
          >
            Dashboard
          </Link>
        </div>

        {/* Right Side Actions */}
        <div className="flex items-center space-x-3">
          {/* Search Button (Mobile) */}
          <button className="md:hidden p-2 rounded-xl bg-white/20 hover:bg-white/30 transition-colors">
            <Search className="w-5 h-5 text-white" />
          </button>

          {/* Notifications */}
          <button className="relative p-2 rounded-xl bg-white/20 hover:bg-white/30 transition-colors">
            <Bell className="w-5 h-5 text-white" />
            <span className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full"></span>
          </button>

          {/* Settings */}
          <button className="p-2 rounded-xl bg-white/20 hover:bg-white/30 transition-colors">
            <Settings className="w-5 h-5 text-white" />
          </button>

          {/* Profile Dropdown */}
          <div className="relative">
            <button
              onClick={() => setIsProfileOpen(!isProfileOpen)}
              className="flex items-center space-x-2 p-2 rounded-xl bg-white/20 hover:bg-white/30 transition-all duration-300"
            >
              <div className="w-8 h-8 bg-gradient-to-br from-cyan-400 to-purple-600 rounded-full flex items-center justify-center">
                <User className="w-4 h-4 text-white" />
              </div>
              <span className="hidden sm:block text-sm font-medium text-white">
                Admin
              </span>
            </button>

            {/* Dropdown Menu */}
            {isProfileOpen && (
              <div className="absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-xl border border-gray-200/50 py-2 z-50">
                <div className="px-4 py-2 border-b border-gray-100">
                  <p className="text-sm font-medium text-gray-900">Admin User</p>
                  <p className="text-xs text-gray-500">admin@codeyaan.com</p>
                </div>
                
                <Link
                  href="/profile"
                  className="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors"
                >
                  <User className="w-4 h-4 mr-3" />
                  Profile
                </Link>
                
                <Link
                  href="/settings"
                  className="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors"
                >
                  <Settings className="w-4 h-4 mr-3" />
                  Settings
                </Link>
                
                <hr className="my-2 border-gray-100" />
                
                <button className="flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors">
                  <LogOut className="w-4 h-4 mr-3" />
                  Sign Out
                </button>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* Mobile Menu */}
      {isMenuOpen && (
        <div className="lg:hidden bg-violet-600 border-t border-white/20">
          <div className="px-4 py-2 space-y-1">
            <Link
              href="/dashboard"
              className={`block px-4 py-3 rounded-lg transition-colors ${
                pathname === "/dashboard"
                  ? "bg-white/20 text-white"
                  : "text-white/80 hover:bg-white/10 hover:text-white"
              }`}
              onClick={() => setIsMenuOpen(false)}
            >
              Dashboard
            </Link>
          </div>
        </div>
      )}
    </nav>
  )
}















-------------------------------------------------------------------------------------


// app/layout.js
import './globals.css'

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body>{children}</body>
    </html>
  )
}

// components/Navbar.js
"use client"
import React from 'react'

export default function Navbar() {
  return (
    <nav className="fixed top-0 w-full h-20 bg-purple-600 text-white flex items-center justify-between px-6 z-50">
      <div className="flex items-center gap-3">
        <span className="text-xl">ðŸ“š</span>
        <h1 className="text-xl font-bold">Admin Panel</h1>
      </div>
      <div className="flex items-center gap-4">
        <span className="cursor-pointer">ðŸ””</span>
        <span className="cursor-pointer">ðŸ‘¤ Admin</span>
      </div>
    </nav>
  )
}

// components/Sidebar.js
"use client"
import React from 'react'
import Link from 'next/link'
import { usePathname } from 'next/navigation'

export default function Sidebar() {
  const pathname = usePathname()
  
  const menuItems = [
    { name: 'Dashboard', path: '/admin/dashboard', icon: 'ðŸ“Š' },
    { name: 'Payments', path: '/admin/payments', icon: 'ðŸ’°' },
    { name: 'Courses', path: '/admin/courses', icon: 'ðŸ“š' },
    { name: 'Users', path: '/admin/users', icon: 'ðŸ‘¥' },
  ]

  return (
    <aside className="w-64 bg-black text-white">
      <nav className="p-4 space-y-2">
        {menuItems.map((item) => (
          <Link key={item.path} href={item.path}>
            <div className={`block p-3 rounded cursor-pointer transition-colors ${
              pathname === item.path 
                ? 'bg-purple-600' 
                : 'bg-gray-800 hover:bg-purple-600'
            }`}>
              {item.icon} {item.name}
            </div>
          </Link>
        ))}
      </nav>
    </aside>
  )
}

// components/MainLayout.js
"use client"
import React from 'react'
import Navbar from './Navbar'
import Sidebar from './Sidebar'

export default function MainLayout({ children }) {
  return (
    <>
      <Navbar />
      <div className="flex mt-20 h-screen">
        <Sidebar />
        <main className="flex-1 bg-gray-50 p-6 overflow-y-auto">
          {children}
        </main>
      </div>
    </>
  )
}

// app/admin/layout.js
import MainLayout from '@/components/MainLayout'

export default function AdminLayout({ children }) {
  return (
    <MainLayout>
      {children}
    </MainLayout>
  )
}

// app/admin/dashboard/page.js
export default function Dashboard() {
  return (
    <div>
      <h1 className="text-3xl font-bold mb-6">Dashboard</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-semibold">Total Students</h3>
          <p className="text-2xl font-bold text-blue-600">1,234</p>
        </div>
        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-semibold">Total Courses</h3>
          <p className="text-2xl font-bold text-green-600">45</p>
        </div>
        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-semibold">Revenue</h3>
          <p className="text-2xl font-bold text-purple-600">â‚¹2,45,000</p>
        </div>
        <div className="bg-white p-6 rounded-lg shadow">
          <h3 className="text-lg font-semibold">Enrollments</h3>
          <p className="text-2xl font-bold text-yellow-600">892</p>
        </div>
      </div>
    </div>
  )
}

// app/admin/payments/page.js
export default function Payments() {
  const payments = [
    { id: 1, student: 'Rahul Sharma', course: 'Web Dev', amount: 15000, status: 'Completed' },
    { id: 2, student: 'Priya Singh', course: 'Data Science', amount: 25000, status: 'Pending' },
    { id: 3, student: 'Amit Kumar', course: 'Mobile Dev', amount: 20000, status: 'Completed' },
  ]

  return (
    <div>
      <h1 className="text-3xl font-bold mb-6">Payments</h1>
      <div className="bg-white rounded-lg shadow overflow-hidden">
        <table className="w-full">
          <thead className="bg-gray-50">
            <tr>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Student</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Course</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Amount</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
            </tr>
          </thead>
          <tbody>
            {payments.map((payment) => (
              <tr key={payment.id} className="border-t">
                <td className="px-6 py-4 whitespace-nowrap">{payment.student}</td>
                <td className="px-6 py-4 whitespace-nowrap">{payment.course}</td>
                <td className="px-6 py-4 whitespace-nowrap">â‚¹{payment.amount}</td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <span className={`px-2 py-1 text-xs rounded-full ${
                    payment.status === 'Completed' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                  }`}>
                    {payment.status}
                  </span>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  )
}

// app/admin/courses/page.js
"use client"
import { useState } from 'react'

export default function Courses() {
  const [showModal, setShowModal] = useState(false)

  const courses = [
    { id: 1, name: 'Web Development', code: 'WD101', price: 15000 },
    { id: 2, name: 'Data Science', code: 'DS201', price: 25000 },
    { id: 3, name: 'Mobile Development', code: 'MD301', price: 20000 },
  ]

  return (
    <div>
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">Courses</h1>
        <button 
          onClick={() => setShowModal(true)}
          className="bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700"
        >
          Add Course
        </button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {courses.map((course) => (
          <div key={course.id} className="bg-white p-6 rounded-lg shadow">
            <h3 className="text-lg font-semibold mb-2">{course.name}</h3>
            <p className="text-gray-600 mb-2">Code: {course.code}</p>
            <p className="text-purple-600 font-bold">â‚¹{course.price}</p>
            <div className="flex gap-2 mt-4">
              <button className="text-blue-600 hover:underline">Edit</button>
              <button className="text-red-600 hover:underline">Delete</button>
            </div>
          </div>
        ))}
      </div>

      {/* Add Course Modal */}
      {showModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white p-8 rounded-lg w-full max-w-md">
            <h2 className="text-2xl font-bold mb-4">Add New Course</h2>
            <form>
              <div className="mb-4">
                <label className="block text-sm font-medium mb-2">Course Name</label>
                <input type="text" className="w-full p-2 border rounded" placeholder="Enter course name" />
              </div>
              <div className="mb-4">
                <label className="block text-sm font-medium mb-2">Course Code</label>
                <input type="text" className="w-full p-2 border rounded" placeholder="e.g., CS101" />
              </div>
              <div className="mb-4">
                <label className="block text-sm font-medium mb-2">Price</label>
                <input type="number" className="w-full p-2 border rounded" placeholder="Enter price" />
              </div>
              <div className="flex justify-end gap-2">
                <button 
                  type="button" 
                  onClick={() => setShowModal(false)}
                  className="px-4 py-2 border rounded hover:bg-gray-50"
                >
                  Cancel
                </button>
                <button 
                  type="submit" 
                  className="px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700"
                >
                  Add Course
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  )
}

// app/admin/users/page.js
export default function Users() {
  const users = [
    { id: 1, name: 'Rahul Sharma', email: 'rahul@example.com', role: 'Student' },
    { id: 2, name: 'Priya Singh', email: 'priya@example.com', role: 'Student' },
    { id: 3, name: 'Dr. Kumar', email: 'kumar@example.com', role: 'Instructor' },
  ]

  return (
    <div>
      <h1 className="text-3xl font-bold mb-6">Users</h1>
      <div className="bg-white rounded-lg shadow overflow-hidden">
        <table className="w-full">
          <thead className="bg-gray-50">
            <tr>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Name</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Email</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Role</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
            </tr>
          </thead>
          <tbody>
            {users.map((user) => (
              <tr key={user.id} className="border-t">
                <td className="px-6 py-4 whitespace-nowrap">{user.name}</td>
                <td className="px-6 py-4 whitespace-nowrap">{user.email}</td>
                <td className="px-6 py-4 whitespace-nowrap">{user.role}</td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <button className="text-blue-600 hover:underline mr-2">Edit</button>
                  <button className="text-red-600 hover:underline">Delete</button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  )
}



































"use client"

import React, { useState } from 'react';
import { 
  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer,
  LineChart, Line, PieChart, Pie, Cell 
} from 'recharts';
import {
  Users, BookOpen, TrendingUp, DollarSign, Eye, Settings,
  Search, Bell, Menu, Home, FileText, Award, MessageSquare,
  Calendar, Shield, LogOut, ChevronDown, Star, Clock,
  UserCheck, UserX, Edit, Trash2, Plus
} from 'lucide-react';

const AdminDashboard = () => {
  const [activeSection, setActiveSection] = useState('dashboard');
  const [sidebarOpen, setSidebarOpen] = useState(true);

  // Sample data for charts
  const monthlyData = [
    { name: 'Jan', students: 120, revenue: 45000 },
    { name: 'Feb', students: 150, revenue: 52000 },
    { name: 'Mar', students: 180, revenue: 61000 },
    { name: 'Apr', students: 220, revenue: 78000 },
    { name: 'May', students: 280, revenue: 95000 },
    { name: 'Jun', students: 320, revenue: 110000 }
  ];

  const courseData = [
    { name: 'JavaScript', value: 35, color: '#3B82F6' },
    { name: 'Python', value: 25, color: '#10B981' },
    { name: 'React', value: 20, color: '#F59E0B' },
    { name: 'Node.js', value: 15, color: '#EF4444' },
    { name: 'Others', value: 5, color: '#8B5CF6' }
  ];

  const recentUsers = [
    { id: 1, name: 'Arjun Sharma', email: 'arjun@email.com', course: 'Full Stack JS', status: 'active', joined: '2024-09-20' },
    { id: 2, name: 'Priya Patel', email: 'priya@email.com', course: 'Python Django', status: 'active', joined: '2024-09-19' },
    { id: 3, name: 'Rahul Kumar', email: 'rahul@email.com', course: 'React Native', status: 'inactive', joined: '2024-09-18' },
    { id: 4, name: 'Sneha Gupta', email: 'sneha@email.com', course: 'Data Science', status: 'active', joined: '2024-09-17' }
  ];

  const courses = [
    { id: 1, title: 'Complete JavaScript Course', students: 450, rating: 4.8, price: 'â‚¹2,999', status: 'active' },
    { id: 2, title: 'Python for Beginners', students: 320, rating: 4.7, price: 'â‚¹2,499', status: 'active' },
    { id: 3, title: 'React.js Masterclass', students: 280, rating: 4.9, price: 'â‚¹3,499', status: 'active' },
    { id: 4, title: 'Node.js Backend Development', students: 195, rating: 4.6, price: 'â‚¹2,799', status: 'draft' }
  ];

  const sidebarItems = [
    { id: 'dashboard', icon: Home, label: 'Dashboard' },
    { id: 'users', icon: Users, label: 'Users' },
    { id: 'courses', icon: BookOpen, label: 'Courses' },
    { id: 'analytics', icon: TrendingUp, label: 'Analytics' },
    { id: 'revenue', icon: DollarSign, label: 'Revenue' },
    { id: 'reviews', icon: MessageSquare, label: 'Reviews' },
    { id: 'certificates', icon: Award, label: 'Certificates' },
    { id: 'reports', icon: FileText, label: 'Reports' },
    { id: 'settings', icon: Settings, label: 'Settings' }
  ];

  const StatCard = ({ title, value, change, icon: Icon, color }) => (
    <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6 hover:shadow-md transition-shadow">
      <div className="flex items-center justify-between">
        <div>
          <p className="text-gray-600 text-sm font-medium">{title}</p>
          <p className="text-2xl font-bold text-gray-900 mt-2">{value}</p>
          <p className={`text-sm mt-2 ${change >= 0 ? 'text-green-600' : 'text-red-600'}`}>
            {change >= 0 ? '+' : ''}{change}% from last month
          </p>
        </div>
        <div className={`p-3 rounded-lg ${color}`}>
          <Icon className="w-6 h-6 text-white" />
        </div>
      </div>
    </div>
  );

  const DashboardContent = () => (
    <div className="space-y-6">
      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <StatCard
          title="Total Students"
          value="1,247"
          change={12.5}
          icon={Users}
          color="bg-blue-500"
        />
        <StatCard
          title="Active Courses"
          value="18"
          change={5.2}
          icon={BookOpen}
          color="bg-green-500"
        />
        <StatCard
          title="Monthly Revenue"
          value="â‚¹1,10,000"
          change={18.7}
          icon={DollarSign}
          color="bg-purple-500"
        />
        <StatCard
          title="Course Views"
          value="45,678"
          change={8.3}
          icon={Eye}
          color="bg-orange-500"
        />
      </div>

      {/* Charts Section */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Revenue Chart */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Revenue & Students Growth</h3>
          <ResponsiveContainer width="100%" height={300}>
            <LineChart data={monthlyData}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="name" />
              <YAxis />
              <Tooltip />
              <Line type="monotone" dataKey="revenue" stroke="#3B82F6" strokeWidth={2} />
              <Line type="monotone" dataKey="students" stroke="#10B981" strokeWidth={2} />
            </LineChart>
          </ResponsiveContainer>
        </div>

        {/* Course Distribution */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Course Distribution</h3>
          <ResponsiveContainer width="100%" height={300}>
            <PieChart>
              <Pie
                data={courseData}
                cx="50%"
                cy="50%"
                labelLine={false}
                outerRadius={80}
                fill="#8884d8"
                dataKey="value"
              >
                {courseData.map((entry, index) => (
                  <Cell key={`cell-${index}`} fill={entry.color} />
                ))}
              </Pie>
              <Tooltip />
            </PieChart>
          </ResponsiveContainer>
          <div className="flex flex-wrap gap-4 mt-4">
            {courseData.map((item, index) => (
              <div key={index} className="flex items-center gap-2">
                <div className={`w-3 h-3 rounded-full`} style={{ backgroundColor: item.color }}></div>
                <span className="text-sm text-gray-600">{item.name} ({item.value}%)</span>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Recent Activity */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Recent Enrollments</h3>
          <div className="space-y-4">
            {recentUsers.map((user) => (
              <div key={user.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div className="flex items-center gap-3">
                  <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold">
                    {user.name.charAt(0)}
                  </div>
                  <div>
                    <p className="font-medium text-gray-900">{user.name}</p>
                    <p className="text-sm text-gray-600">{user.course}</p>
                  </div>
                </div>
                <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                  user.status === 'active' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-gray-100 text-gray-800'
                }`}>
                  {user.status}
                </span>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">Top Performing Courses</h3>
          <div className="space-y-4">
            {courses.slice(0, 4).map((course) => (
              <div key={course.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div>
                  <p className="font-medium text-gray-900">{course.title}</p>
                  <div className="flex items-center gap-4 mt-1">
                    <span className="text-sm text-gray-600">{course.students} students</span>
                    <div className="flex items-center gap-1">
                      <Star className="w-4 h-4 text-yellow-400 fill-current" />
                      <span className="text-sm text-gray-600">{course.rating}</span>
                    </div>
                  </div>
                </div>
                <span className="font-semibold text-green-600">{course.price}</span>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  const UsersContent = () => (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold text-gray-900">Users Management</h2>
        <button className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2">
          <Plus className="w-4 h-4" />
          Add User
        </button>
      </div>

      <div className="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
        <div className="p-6 border-b border-gray-200">
          <div className="flex gap-4">
            <div className="flex-1 relative">
              <Search className="w-5 h-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
              <input
                type="text"
                placeholder="Search users..."
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
            </div>
            <select className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500">
              <option>All Status</option>
              <option>Active</option>
              <option>Inactive</option>
            </select>
          </div>
        </div>

        <div className="overflow-x-auto">
          <table className="w-full">
            <thead className="bg-gray-50">
              <tr>
                <th className="text-left p-4 font-medium text-gray-900">User</th>
                <th className="text-left p-4 font-medium text-gray-900">Course</th>
                <th className="text-left p-4 font-medium text-gray-900">Status</th>
                <th className="text-left p-4 font-medium text-gray-900">Joined</th>
                <th className="text-left p-4 font-medium text-gray-900">Actions</th>
              </tr>
            </thead>
            <tbody>
              {recentUsers.map((user) => (
                <tr key={user.id} className="border-t border-gray-100">
                  <td className="p-4">
                    <div className="flex items-center gap-3">
                      <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold">
                        {user.name.charAt(0)}
                      </div>
                      <div>
                        <p className="font-medium text-gray-900">{user.name}</p>
                        <p className="text-sm text-gray-600">{user.email}</p>
                      </div>
                    </div>
                  </td>
                  <td className="p-4 text-gray-900">{user.course}</td>
                  <td className="p-4">
                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${
                      user.status === 'active' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-gray-100 text-gray-800'
                    }`}>
                      {user.status}
                    </span>
                  </td>
                  <td className="p-4 text-gray-600">{user.joined}</td>
                  <td className="p-4">
                    <div className="flex gap-2">
                      <button className="p-2 text-blue-600 hover:bg-blue-50 rounded-lg">
                        <Edit className="w-4 h-4" />
                      </button>
                      <button className="p-2 text-red-600 hover:bg-red-50 rounded-lg">
                        <Trash2 className="w-4 h-4" />
                      </button>
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );

  const CoursesContent = () => (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold text-gray-900">Courses Management</h2>
        <button className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center gap-2">
          <Plus className="w-4 h-4" />
          Add Course
        </button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {courses.map((course) => (
          <div key={course.id} className="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden hover:shadow-md transition-shadow">
            <div className="h-48 bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
              <BookOpen className="w-16 h-16 text-white opacity-80" />
            </div>
            <div className="p-6">
              <div className="flex justify-between items-start mb-3">
                <h3 className="font-semibold text-gray-900 line-clamp-2">{course.title}</h3>
                <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                  course.status === 'active' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-yellow-100 text-yellow-800'
                }`}>
                  {course.status}
                </span>
              </div>
              
              <div className="space-y-2 mb-4">
                <div className="flex items-center justify-between text-sm text-gray-600">
                  <span>{course.students} students</span>
                  <div className="flex items-center gap-1">
                    <Star className="w-4 h-4 text-yellow-400 fill-current" />
                    <span>{course.rating}</span>
                  </div>
                </div>
                <p className="text-lg font-bold text-green-600">{course.price}</p>
              </div>

              <div className="flex gap-2">
                <button className="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg text-sm">
                  Edit
                </button>
                <button className="px-4 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 text-sm">
                  View
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const renderContent = () => {
    switch (activeSection) {
      case 'dashboard':
        return <DashboardContent />;
      case 'users':
        return <UsersContent />;
      case 'courses':
        return <CoursesContent />;
      case 'analytics':
        return <div className="text-center py-20"><TrendingUp className="w-16 h-16 text-gray-400 mx-auto mb-4" /><p className="text-gray-600">Analytics section coming soon...</p></div>;
      case 'revenue':
        return <div className="text-center py-20"><DollarSign className="w-16 h-16 text-gray-400 mx-auto mb-4" /><p className="text-gray-600">Revenue section coming soon...</p></div>;
      default:
        return <div className="text-center py-20"><p className="text-gray-600">Section under development...</p></div>;
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 flex">
      {/* Sidebar */}
      <div className={`${sidebarOpen ? 'w-64' : 'w-16'} bg-white border-r border-gray-200 flex flex-col transition-all duration-300`}>
        {/* Logo */}
        <div className="p-4 border-b border-gray-200">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center">
              <span className="text-white font-bold text-lg">C</span>
            </div>
            {sidebarOpen && (
              <div>
                <h1 className="text-xl font-bold text-gray-900">Codeyaan</h1>
                <p className="text-xs text-gray-600">Admin Dashboard</p>
              </div>
            )}
          </div>
        </div>

        {/* Navigation */}
        <nav className="flex-1 py-4">
          {sidebarItems.map((item) => (
            <button
              key={item.id}
              onClick={() => setActiveSection(item.id)}
              className={`w-full flex items-center gap-3 px-4 py-3 text-left hover:bg-gray-50 transition-colors ${
                activeSection === item.id 
                  ? 'bg-blue-50 text-blue-600 border-r-2 border-blue-600' 
                  : 'text-gray-700'
              }`}
            >
              <item.icon className="w-5 h-5" />
              {sidebarOpen && <span className="font-medium">{item.label}</span>}
            </button>
          ))}
        </nav>

        {/* User Profile */}
        <div className="p-4 border-t border-gray-200">
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 bg-gradient-to-r from-green-500 to-blue-600 rounded-full flex items-center justify-center text-white font-semibold">
              A
            </div>
            {sidebarOpen && (
              <div className="flex-1">
                <p className="text-sm font-medium text-gray-900">Admin</p>
                <p className="text-xs text-gray-600">admin@codeyaan.com</p>
              </div>
            )}
            <button className="p-2 text-gray-400 hover:text-red-600">
              <LogOut className="w-4 h-4" />
            </button>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex flex-col">
        {/* Header */}
        <header className="bg-white border-b border-gray-200 px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <button
                onClick={() => setSidebarOpen(!sidebarOpen)}
                className="p-2 hover:bg-gray-100 rounded-lg"
              >
                <Menu className="w-5 h-5" />
              </button>
              <h2 className="text-xl font-semibold text-gray-900 capitalize">
                {activeSection === 'dashboard' ? 'Dashboard Overview' : activeSection}
              </h2>
            </div>

            <div className="flex items-center gap-4">
              <button className="p-2 hover:bg-gray-100 rounded-lg relative">
                <Bell className="w-5 h-5" />
                <span className="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full"></span>
              </button>
              <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold">
                A
              </div>
            </div>
          </div>
        </header>

        {/* Content */}
        <main className="flex-1 p-6 overflow-auto">
          {renderContent()}
        </main>
      </div>
    </div>
  );
};

export default AdminDashboard;


